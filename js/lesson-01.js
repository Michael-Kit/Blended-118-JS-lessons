// Завдання 1:

// Запропонуйте користувачу ввести число за допомогою prompt().
// Збережіть введене значення у змінну number.
// Перевірте, чи дорівнює змінна number числу 10:
//    Якщо так – виведіть повідомлення 'Вірно' у alert().
//    Якщо ні – виведіть 'Невірно'.

// Підказка: prompt завжди повертає рядок (String), тому перед перевіркою
// перетворіть значення на число за допомогою Number().
// Запитуємо користувача ввести число

// const number = Number(prompt("Введіть число:"));

// if (number === 10) {
//     alert("Вірно");
// } else {
//     alert("Невірно");
// }

// console.log(number);

// result = alert("Привіт")
// result = prompt("ввідіть чисдо")
// result = confirm()

// Завдання 2:

// У змінній min лежить випадкове число від 0 до 59.
// Визначте, в яку чверть години потрапляє
// це число (у першу, другу, третю чи четверту).
// Виведіть в alert відповідне повідомлення, наприклад:
// "10 входить в першу чверть"

// const min = Math.floor(Math.random() * (59 - 0) + 0);

// Генеруємо випадкове число від 0 до 59

// const min = Math.floor(Math.random() * 59);

// let quarter;

// if (min >= 0 && min <= 14) {
//     quarter = "перша";
// } else if (min >= 15 && min <= 29) {
//     quarter = "друга";
// } else if (min >= 30 && min <= 44) {
//     quarter = "третя";
// } else {
//     quarter = "четверта";
// }


// alert(`${min} входить в ${quarter} чверть`);

// console.log(quarter);


// Завдання 3:

// Змінна num може набувати 4 значення: '1', '2', '3' або '4'
// (запитуй це значення у користувача через prompt).
// Якщо вона має значення '1', то у змінну result запишіть 'зима',
// якщо має значення '2' - 'весна' і так далі.
// Розв'яжіть завдання через switch-case.
// Не забудьте про дефолтне значення, на випадок, якщо користувач
// введе в prompt щось інше. В такому випадку result має набувати значення:
// "Вибачте, але ви маєте ввести значення від 1 до 4 включно".
// Значення змінної result виведіть в консоль.

// Запитуємо значення у користувача

// const num = prompt("Введіть число від 1 до 4:");

// let result;

// switch (num) {
//     case "1":
//         result = "зима";
//         break;
//     case "2":
//         result = "весна";
//         break;
//     case "3":
//         result = "літо";
//         break;
//     case "4":
//         result = "осінь";
//         break;
//     default:
//         result = "Вибачте, але ви маєте ввести значення від 1 до 4 включно";
// }


// console.log(result);


// Завдання 4:

// Отримуйте від користувача число (кількість хвилин) через prompt
// і виводьте у консоль рядок у форматі годин та хвилин.
// Приклад: користувач вводить в prompt '70' -> в консолі відобразиться '01:10'.
// Корисне посилання для відображення годин та хвилин у потрібному форматі ('01' замість '1'):
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart#examples

//?  Можливе таке рішення 1:

//*     // Запитуємо у користувача кількість хвилин
//*     let minutes = Number(prompt("Введіть кількість хвилин:"));

//*     // Обчислюємо години та хвилини
//*     let hours = Math.floor(minutes / 60);
//*     let remainingMinutes = minutes % 60;

//*     // Форматуємо числа для правильного відображення (наприклад, '01' замість '1')
//*     let formattedHours = String(hours).padStart(2, "0");
//*     let formattedMinutes = String(remainingMinutes).padStart(2, "0");

//*      Виводимо результат у консоль
//*      console.log(`${formattedHours}:${formattedMinutes}`);

//todo:  А креще таке рішення ,через функцію( це надає можливість користуватися кодом в любому місті, можливо навіть
//todo   функцію зберегти в окремому файлі і поті її виклакати де вона може бути потрібна)

const totalMinutes = Number(prompt("Введіть кількість хвилин"));

function formatTime(totalMinutes) {
    let hours = Math.floor(totalMinutes / 60);
    let modefiedHours = String(hours).padStart(2, "0");
    let minutes = totalMinutes % 60;
    let modefiedMinutes = String(minutes).padStart(2, "0");
    return `${modefiedHours}:${modefiedMinutes}`;
}


console.log(formatTime(totalMinutes));


// console.log(totalMinutes);

// Завдання 5:

// Напишіть код, який запитуватиме у користувача
// логін за допомогою prompt і виводить результат в консоль браузера

// Після цього додайте перевірку введеного користувачем значення:
// Якщо відвідувач вводить "Адмін",
// то prompt запитує пароль (не забудьте зберігти його у змінну для подальшої перевірки).
// Якщо нічого не ввели або натиснули Cancel,
// Вивести в alert строку "Скасовано"
// В іншому випадку вивести в alert рядок "Я вас не знаю"

// Пароль перевіряти так:
// Якщо введено пароль "Я головний",
// то вивести в alert рядок "Добрий день!",
// в іншому випадку вивести в alert рядок "Невірний пароль!"

// Завдання 6:

// Використайте цикл while, щоб вивести в console всі числа від 0 до 20 включно.

// Завдання 7:

// Напишіть функцію getNumbers(min, max), що приймає 2 параметри - 
// мінімальне і максимальне число відповідно.
// Напишіть цикл всередині функції, який виводить у консоль
// всі числа від max до min за спаданням.
// Окрім цього, підрахуйте суму всіх парних чисел в цьому циклі
// і поверніть її з функції.

// Завдання 8:

// Напишіть функцію min(a, b), яка приймає 2 числа і повертає меньше з них.
// Потрібно додати перевірку, що функція отримує саме числа, в іншому випадку
// повертати з функції рядок - 'Not a number!'.

// Завдання 9:

// Напишіть функцію isAdult(age), яка  приймає число - вік користувача і повертає true, 
// якщо параметр age більше чи дорівнює 18.
// В іншому випадку вона запитує підтвердження через confirm 
// і повертає його результат (true/false).

// Завдання 10:

// Напишіть функцію fizzBuzz(num), яка приймає число і перевіряє кожне число від 1 до num:
// Якщо число ділитися  без остачі на 3 - виводить в консоль 'fizz',
// якщо ділиться  без остачі на 5 - виводить в консоль 'buzz',
// якщо ділиться  без остачі і на 3, і на 5 - виводить в консоль 'fizzbuzz'.



// Результат:

// У вас власний проєкт, в якому буде 5-10 вирішених задач по 1-2 модулям, можливо навіть з кількома варіантами вирішення.
// Проєкт оформлений у вигляді репозиторію на GitHub, що підготує вас до правильної роботи з проєктами та домашніми завданнями.
// Ви закріпите навички роботи з основами JS та навчитеся працювати з репозиторіями для організації власних проєктів.

// Ці завдання допоможуть вам краще зрозуміти так